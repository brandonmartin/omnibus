--- ./shell.c.orig	2012-03-22 17:33:17.000000000 -0700
+++ ./shell.c	2012-03-22 17:58:29.000000000 -0700
@@ -27,6 +27,7 @@
 #endif
 
 #include <sys/types.h>
+#include <stdio.h>
 
 #if defined (HAVE_UNISTD_H)
 #  include <unistd.h>
@@ -54,6 +55,9 @@
 #if defined (HAVE_PWD_H)
 #include <pwd.h>
 #endif
+#if defined (_WIN32)
+#include <windows.h>
+#endif /* _WIN32 */
 
 #include <stdio.h>
 
@@ -160,6 +164,7 @@
 sh_get_home_dir ()
 {
   char *home_dir;
+#if !defined (_WIN32)
   struct passwd *entry;
 
   home_dir = (char *)NULL;
@@ -168,6 +173,9 @@
   if (entry)
     home_dir = entry->pw_dir;
 #endif
+#else
+  home_dir = sh_get_env_value ("HOME");
+#endif /* !_WIN32 */
   return (home_dir);
 }
 
@@ -177,6 +185,7 @@
 #  endif
 #endif
 
+#if !defined (_WIN32)
 int
 sh_unset_nodelay_mode (fd)
      int fd;
@@ -206,3 +215,30 @@
 
   return 0;
 }
+
+#else	/* !_WIN32  */
+
+char *
+_rl_get_user_registry_string (char *keyName, char* valName)
+{
+  char *result = NULL;
+  HKEY	subKey;
+  if ( keyName && (RegOpenKeyEx(HKEY_CURRENT_USER, keyName, 0, KEY_READ, &subKey)
+                   == ERROR_SUCCESS) )
+    {
+      DWORD type;
+      char *chtry = NULL;
+      DWORD bufSize = 0;
+
+      if ( (RegQueryValueExA(subKey, valName, NULL, &type, chtry, &bufSize)
+	    == ERROR_SUCCESS) && (type == REG_SZ) )
+        {
+	  if ( (chtry = (char *)xmalloc(bufSize))
+	       && (RegQueryValueExA(subKey, valName, NULL, &type, chtry, &bufSize)
+		   == ERROR_SUCCESS) )
+	    result = chtry;
+        }
+    }
+  return result;
+}
+#endif	/* !_WIN32  */
